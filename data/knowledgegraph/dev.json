[
    {
        "question": "what position did pat connaughton, author of did you see that thing? that\u2019s sidat-singh! the syracuse walking dream!, play?",
        "qid": "4300563004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Did you see that thing? That\u2019s Sidat-Singh! The Syracuse Walking Dream!": "m.09rl290",
            "Pat Connaughton": "m.0j50kb6"
        },
        "s_expression": "(AND basketball.basketball_position (AND (JOIN basketball.basketball_position.players (JOIN (R media_common.quotation.author) m.09rl290)) (JOIN basketball.basketball_position.players m.0j50kb6)))",
        "actions": [
            "get_relations(m.09rl290)",
            "get_neighbors(m.09rl290,media_common.quotation.author)",
            "get_relations(#0)",
            "get_neighbors(#0,basketball.basketball_player.position_s)",
            "get_relations(m.0j50kb6)",
            "get_neighbors(m.0j50kb6,basketball.basketball_player.position_s)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ch8k4",
                "entity_name": "Guard"
            }
        ]
    },
    {
        "question": "name the sensor type of a digital camera that has the color filter array type of bayer and iso settings of 5000?",
        "qid": "4300861012000_grailqa",
        "source": "grailqa",
        "entities": {
            "bayer": "m.02r8js",
            "5000": "m.0h27q91"
        },
        "s_expression": "(AND digicams.camera_sensor_type (JOIN (R digicams.digital_camera.sensor_type) (AND (JOIN digicams.digital_camera.color_filter_array_type m.02r8js) (JOIN digicams.digital_camera.iso_setting m.0h27q91))))",
        "actions": [
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(m.0h27q91)",
            "get_neighbors(m.0h27q91,digicams.camera_iso.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.sensor_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x3xhq",
                "entity_name": "Live MOS"
            }
        ]
    },
    {
        "question": "what are the common symptoms of fip and some disease caused by old age?",
        "qid": "246000102_graphquestions",
        "source": "graphquestions",
        "entities": {
            "fip": "m.06_1k9",
            "Old age": "m.01hbgs"
        },
        "s_expression": "(AND base.pethealth.symptom (AND (JOIN (R base.pethealth.pet_disease_or_medical_condition.symptoms) m.06_1k9) (JOIN (R base.pethealth.pet_disease_or_medical_condition.symptoms) (JOIN (R base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor) m.01hbgs))))",
        "actions": [
            "get_relations(m.06_1k9)",
            "get_neighbors(m.06_1k9,base.pethealth.pet_disease_or_medical_condition.symptoms)",
            "get_relations(m.01hbgs)",
            "get_neighbors(m.01hbgs,base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor)",
            "get_relations(#1)",
            "get_neighbors(#1,base.pethealth.pet_disease_or_medical_condition.symptoms)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.023s6n",
                "entity_name": "Weight loss"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0brgy",
                "entity_name": "Anorexia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f3kl",
                "entity_name": "Diarrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cjf0",
                "entity_name": "Fever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01j6t0",
                "entity_name": "Fatigue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lcdk",
                "entity_name": "Anemia"
            }
        ]
    },
    {
        "question": "what are the characteristics of feline infectious peritonitis and old diseases?",
        "qid": "246000201_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Feline infectious peritonitis": "m.06_1k9",
            "old": "m.01hbgs"
        },
        "s_expression": "(AND base.pethealth.symptom (AND (JOIN (R base.pethealth.pet_disease_or_medical_condition.symptoms) m.06_1k9) (JOIN (R base.pethealth.pet_disease_or_medical_condition.symptoms) (JOIN (R base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor) m.01hbgs))))",
        "actions": [
            "get_relations(m.06_1k9)",
            "get_neighbors(m.06_1k9,base.pethealth.pet_disease_or_medical_condition.symptoms)",
            "get_relations(m.01hbgs)",
            "get_neighbors(m.01hbgs,base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor)",
            "get_relations(#1)",
            "get_neighbors(#1,base.pethealth.pet_disease_or_medical_condition.symptoms)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.023s6n",
                "entity_name": "Weight loss"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0brgy",
                "entity_name": "Anorexia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f3kl",
                "entity_name": "Diarrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cjf0",
                "entity_name": "Fever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01j6t0",
                "entity_name": "Fatigue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lcdk",
                "entity_name": "Anemia"
            }
        ]
    },
    {
        "question": "how many mac models used motorola 68040 processors?",
        "qid": "3205922013000_grailqa",
        "source": "grailqa",
        "entities": {
            "mac": "m.0zd6",
            "Motorola 68040": "m.05397"
        },
        "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.0zd6) (JOIN computer.computer.processor m.05397))))",
        "actions": [
            "get_relations(m.0zd6)",
            "get_neighbors(m.0zd6,computer.computer.includes_models)",
            "get_relations(m.05397)",
            "get_neighbors(m.05397,computer.computer_processor.used_in_computers)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "ab\u016b ray\u1e25\u0101n al-b\u012br\u016bn\u012b works in what department of university",
        "qid": "4301362010000_grailqa",
        "source": "grailqa",
        "entities": {
            "Ab\u016b Ray\u1e25\u0101n al-B\u012br\u016bn\u012b": "m.01ny93",
            "university": "m.0j_sncb"
        },
        "s_expression": "(AND education.department (AND (JOIN education.department.field (JOIN education.field_of_study.academics_in_this_field m.01ny93)) (JOIN (R education.university.departments) m.0j_sncb)))",
        "actions": [
            "get_relations(m.01ny93)",
            "get_neighbors(m.01ny93,education.academic.research_areas)",
            "get_relations(#0)",
            "get_neighbors(#0,education.field_of_study.academic_departments)",
            "get_relations(m.0j_sncb)",
            "get_neighbors(m.0j_sncb,education.university.departments)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dl5_c_",
                "entity_name": "University of Florida Department of History"
            }
        ]
    },
    {
        "question": "what rocket function is supported by saturn v as well as another rocket made by chrysler llc?",
        "qid": "242000202_graphquestions",
        "source": "graphquestions",
        "entities": {
            "chrysler llc": "m.01_bp",
            "Saturn V": "m.07932"
        },
        "s_expression": "(AND spaceflight.rocket_function (AND (JOIN spaceflight.rocket_function.rockets_supporting_this_function (JOIN (R spaceflight.rocket_manufacturer.rockets_manufactured) m.01_bp)) (JOIN (R spaceflight.rocket.rocket_function) m.07932)))",
        "actions": [
            "get_relations(m.01_bp)",
            "get_neighbors(m.01_bp,spaceflight.rocket_manufacturer.rockets_manufactured)",
            "get_relations(#0)",
            "get_neighbors(#0,spaceflight.rocket.rocket_function)",
            "get_relations(m.07932)",
            "get_neighbors(m.07932,spaceflight.rocket.rocket_function)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cspd",
                "entity_name": "Low Earth orbit"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04rkwz",
                "entity_name": "Launch vehicle"
            }
        ]
    },
    {
        "question": "identify the tropical cyclones that are in the same category with hurricane marie and also affected eastern north america.",
        "qid": "4300198000000_grailqa",
        "source": "grailqa",
        "entities": {
            "Hurricane Marie": "m.011q1wmr",
            "Eastern North America": "m.01xs1j8"
        },
        "s_expression": "(AND meteorology.tropical_cyclone (AND (JOIN (R meteorology.tropical_cyclone_category.tropical_cyclones) (JOIN (R meteorology.tropical_cyclone.category) m.011q1wmr)) (JOIN meteorology.tropical_cyclone.affected_areas m.01xs1j8)))",
        "actions": [
            "get_relations(m.011q1wmr)",
            "get_neighbors(m.011q1wmr,meteorology.tropical_cyclone.category)",
            "get_relations(#0)",
            "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
            "get_relations(m.01xs1j8)",
            "get_neighbors(m.01xs1j8,meteorology.cyclone_affected_area.cyclones)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07nnlb",
                "entity_name": "Hurricane Katrina"
            }
        ]
    },
    {
        "question": "find the camera storage type that is supported by olympus fe-130 and the digital camera with iso setting of 2000.",
        "qid": "4302372004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Olympus FE-130": "m.03q2k5k",
            "2000": "m.04l497s"
        },
        "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.04l497s)) (JOIN (R digicams.digital_camera.supported_storage_types) m.03q2k5k)))",
        "actions": [
            "get_relations(m.04l497s)",
            "get_neighbors(m.04l497s,digicams.camera_iso.cameras)",
            "get_relations(#0)",
            "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
            "get_relations(m.03q2k5k)",
            "get_neighbors(m.03q2k5k,digicams.digital_camera.supported_storage_types)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zmtt",
                "entity_name": "xD-Picture Card"
            }
        ]
    },
    {
        "question": "which martial art has the same category as silat and has internal?",
        "qid": "4301064012000_grailqa",
        "source": "grailqa",
        "entities": {
            "Silat": "m.03hfzm1",
            "Internal": "m.02_yl6z"
        },
        "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.03hfzm1)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.02_yl6z)))",
        "actions": [
            "get_relations(m.03hfzm1)",
            "get_neighbors(m.03hfzm1,martial_arts.martial_art.category)",
            "get_relations(#0)",
            "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
            "get_relations(m.02_yl6z)",
            "get_neighbors(m.02_yl6z,martial_arts.martial_art_category.martial_arts)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07k4r",
                "entity_name": "Tai chi"
            }
        ]
    },
    {
        "question": "how many electronic arts games are available for purchase in the united states of america?",
        "qid": "444000200_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Electronic Arts": "m.01n073",
            "United States of America": "m.09c7w0"
        },
        "s_expression": "(COUNT (AND cvg.game_version (AND (JOIN (R cvg.cvg_publisher.game_versions_published) m.01n073) (JOIN cvg.game_version.regions m.09c7w0))))",
        "actions": [
            "get_relations(m.01n073)",
            "get_neighbors(m.01n073,cvg.cvg_publisher.game_versions_published)",
            "get_relations(m.09c7w0)",
            "get_neighbors(m.09c7w0,cvg.computer_game_region.versions_released_in_this_region)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5"
            }
        ]
    },
    {
        "question": "list all quotations from nikodemos that are addressed to whom \u201cequality must be maintained, if it is promised.\u201d was addressed to.",
        "qid": "4302343002000_grailqa",
        "source": "grailqa",
        "entities": {
            "nikodemos": "m.0cpg05_",
            "\u201cEquality must be maintained, if it is promised.\u201d": "m.0cvbnm3"
        },
        "s_expression": "(AND media_common.quotation_addressee (AND (JOIN media_common.quotation_addressee.quotations (JOIN (R fictional_universe.fictional_character.quotations) m.0cpg05_)) (JOIN media_common.quotation_addressee.quotations m.0cvbnm3)))",
        "actions": [
            "get_relations(m.0cpg05_)",
            "get_neighbors(m.0cpg05_,fictional_universe.fictional_character.quotations)",
            "get_relations(#0)",
            "get_neighbors(#0,media_common.quotation.addressee)",
            "get_relations(m.0cvbnm3)",
            "get_neighbors(m.0cvbnm3,media_common.quotation.addressee)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cpg042",
                "entity_name": "Charon"
            }
        ]
    },
    {
        "question": "which song is the longest song of handel: messiah (dublin version, 1742) ?",
        "qid": "4301467006000_grailqa",
        "source": "grailqa",
        "entities": {
            "Handel: Messiah (Dublin Version, 1742)": "m.03xxf2z"
        },
        "s_expression": "(ARGMAX (AND music.recording (JOIN (R music.release.track) (JOIN (R music.album.releases) m.03xxf2z))) music.recording.length)",
        "actions": [
            "get_relations(m.03xxf2z)",
            "get_neighbors(m.03xxf2z,music.album.releases)",
            "get_relations(#0)",
            "get_neighbors(#0,music.release.track)",
            "get_attributes(#1)",
            "argmax(#1,music.recording.length)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.017nbgl",
                "entity_name": "The Messiah, Part 3 (Nos. 45-53): Aria, the Trumpet Shall Sound"
            }
        ]
    },
    {
        "question": "which is the longest release track of recordings that baeho \"bobby\" shin has written?",
        "qid": "4300020012000_grailqa",
        "source": "grailqa",
        "entities": {
            "Baeho \"Bobby\" Shin": "m.012cr5h8"
        },
        "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) m.012cr5h8))) music.release_track.length)",
        "actions": [
            "get_relations(m.012cr5h8)",
            "get_neighbors(m.012cr5h8,music.engineer.tracks_engineered)",
            "get_relations(#0)",
            "get_neighbors(#0,music.recording.tracks)",
            "get_attributes(#1)",
            "argmax(#1,music.release_track.length)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.012c1xs6",
                "entity_name": "Bliss"
            }
        ]
    },
    {
        "question": "Name the last time the team with the mascot named Miles won the super bowl.?",
        "qid": "WebQTest-969_7621d2b69f15f44aba9e557f4af9764c_cwq",
        "source": "cwq",
        "entities": {
            "Super Bowl": "m.06x5s",
            "Miles": "m.027l54x"
        },
        "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.027l54x)) (JOIN time.event.instance_of_recurring_event m.06x5s)) time.event.end_date)",
        "actions": [
            "get_relations(m.027l54x)",
            "get_neighbors(m.027l54x,sports.mascot.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,time.recurring_event.instances)",
            "intersection(#1,#2)",
            "get_attributes(#3)",
            "argmax(#3,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.076y0",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XXXIII"
            }
        ]
    },
    {
        "question": "what is the subject of the quote what is faith but a kind of betting or speculation after all? it should be, i bet that my redeemer liveth. which was spoken quoted by the angel of remembrance?",
        "qid": "4300443013000_grailqa",
        "source": "grailqa",
        "entities": {
            "What is faith but a kind of betting or speculation after all? It should be, I bet that my Redeemer liveth.": "m.048g4sk",
            "Angel of Remembrance": "m.0h3grm9"
        },
        "s_expression": "(AND media_common.quotation_subject (AND (JOIN (R media_common.quotation.subjects) (JOIN media_common.quotation.spoken_by_character m.0h3grm9)) (JOIN (R media_common.quotation.subjects) m.048g4sk)))",
        "actions": [
            "get_relations(m.0h3grm9)",
            "get_neighbors(m.0h3grm9,fictional_universe.fictional_character.quotations)",
            "get_relations(#0)",
            "get_neighbors(#0,media_common.quotation.subjects)",
            "get_relations(m.048g4sk)",
            "get_neighbors(m.048g4sk,media_common.quotation.subjects)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zq2",
                "entity_name": "Faith"
            }
        ]
    },
    {
        "question": "the nissan cefiro and the model with predecesser renault is included in what class of automobiles?",
        "qid": "4301079014000_grailqa",
        "source": "grailqa",
        "entities": {
            "renault": "m.032b7p",
            "Nissan Cefiro": "m.03vynb"
        },
        "s_expression": "(AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples (JOIN (R automotive.model.predecessor) m.032b7p)) (JOIN automotive.automotive_class.examples m.03vynb)))",
        "actions": [
            "get_relations(m.032b7p)",
            "get_neighbors(m.032b7p,automotive.model.predecessor)",
            "get_relations(#0)",
            "get_neighbors(#0,automotive.model.automotive_class)",
            "get_relations(m.03vynb)",
            "get_neighbors(m.03vynb,automotive.model.automotive_class)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.016gvg",
                "entity_name": "Station Wagon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.021mp2",
                "entity_name": "Sedan"
            }
        ]
    },
    {
        "question": "What is the predominant language of the region where \"Into the Arms of Strangers: Stories of the Kindertransport\" was located?",
        "qid": "WebQTrn-1215_20ae9a3ac5a1d4d40671f15de04edb15_cwq",
        "source": "cwq",
        "entities": {
            "Into the Arms of Strangers: Stories of the Kindertransport": "m.0bd1d4"
        },
        "s_expression": "(JOIN (R location.country.languages_spoken) (AND (JOIN (R language.human_language.main_country) common.topic) (JOIN film.film_location.featured_in_films m.0bd1d4)))",
        "actions": [
            "get_relations(common.topic)",
            "get_neighbors(common.topic,language.human_language.main_country)",
            "get_relations(m.0bd1d4)",
            "get_neighbors(m.0bd1d4,film.film.featured_film_locations)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,location.country.languages_spoken)"
        ],
        "answer": [
            {
                "answer_argument": "m.05p2d",
                "answer_type": "Entity",
                "entity_name": "Old English"
            }
        ]
    },
    {
        "question": "name the camera storage type supported by konica minolta dimage g600 and a digital camera with an iso setting of 64.",
        "qid": "4302372010000_grailqa",
        "source": "grailqa",
        "entities": {
            "Konica Minolta DiMAGE G600": "m.03q2r5h",
            "64": "m.04l497_"
        },
        "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.04l497_)) (JOIN (R digicams.digital_camera.supported_storage_types) m.03q2r5h)))",
        "actions": [
            "get_relations(m.04l497_)",
            "get_neighbors(m.04l497_,digicams.camera_iso.cameras)",
            "get_relations(#0)",
            "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
            "get_relations(m.03q2r5h)",
            "get_neighbors(m.03q2r5h,digicams.digital_camera.supported_storage_types)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01tthm",
                "entity_name": "Secure Digital"
            }
        ]
    },
    {
        "question": "what is the number of infectious diseases that are transmitted by the deer tick?",
        "qid": "4303160014000_grailqa",
        "source": "grailqa",
        "entities": {
            "deer tick": "m.02qmvh1"
        },
        "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.02qmvh1)))))",
        "actions": [
            "get_relations(m.02qmvh1)",
            "get_neighbors(m.02qmvh1,medicine.vector_of_disease.disease)",
            "get_relations(#0)",
            "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
            "get_relations(#1)",
            "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "133"
            }
        ]
    }
]